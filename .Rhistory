if (!"SnowballC" %in% installed.packages()) install.packages("SnowballC")
if (!"tm" %in% installed.packages()) install.packages("tm")
library(tm)        #this will also load SnowballC
df <- read.csv("http://vosonlab.net/papers/Taiwan_2017/nano2seeds_v2.csv",stringsAsFactors=FALSE)
view(df)
View(df)
library(tm)
library(tm)
library(Rcpp)
df[1,2]
df[1,]
install.packages(tm)
library("tm", lib.loc="~/R/win-library/3.4")
install.packages("tm", repos="http://R-Forge.R-project.org")
library(tm)
library("tm", lib.loc="~/R/win-library/3.4")
library("tm", lib.loc="~/R/win-library/3.4")
library("tm", lib.loc="~/R/win-library/3.4")
install.packages("SnowballC")
install.packages(tm)
library("tm", lib.loc="~/R/win-library/3.4")
View(edge)
library(igraph)
install.packages("igraph)
install.packages("igraph")
View(df)
7%%3
7%/%
7%/%3
x<-c(1,2,3)
x
x
names(x)<-c("one","two","three")
x
z<-c(1,2,"k")
z
k<-list(p<-c(1,2,3))
k<-list(p<-c(1,2,3),q<-c(4,5,6),r<-c(7,8,9))
k
t<-c(1,TRUE,"y")
t
t<-c(1,true,y)
t<-c(1,TRUE, y)
t<-c(1,TRUE, "y/")
t
x<-c(1 2 3)
x<-c(1,2,3)
y<-c(4,5,6)
z<-x+y
z
x<-c(1,2,3)
names(x)<-c("one","two","three")
x
x-c(1:10,byrow=2)
x<-c(1:10,byrow=2,TRUE)
X
X<-c(1:10,byrow==2,TRUE)
levels(x)
x<-c(1,2,3)
levels(x)
level(x)
levels(x)
x
levels(x)
setwd("D:/GitHub/R-course-2018")
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1:30)
# Create a variable csn, with data: l
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1:30)
# Create a variable csn, with data: length of course.student.number
csn <- length(course.student.number)
csn
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1:30)
# Create a variable csn, with data: length of course.student.number
csn <- length(course.student.number)
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(x = c(55:100), size = csn)
course.student.grade
### practice_2
### course_grade
# Create a vector called course.students.number, with data: c(1: 30)
course.student.number <- c(1:30)
course.student.number
# Create a variable csn, with data: length of course.student.number
csn <- length(course.student.number)
csn
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(c(50:100),size=csn) ##size indicates the number of observations##
course.student.grade
### practice_2_answer
### course_grade
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1:30)
# Create a variable csn, with data: length of course.student.number
csn <- length(course.student.number)
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(x = c(55:100), size = csn)
course.student.grade
# Assign course.student.number as names of the course.student.grade
names(course.student.grade) <- course.student.number
# Create csg.mean, with the mean value of course.student.grade
csg.mean <- mean(course.student.grade)
# Create csg.max with the max value of course.student.grade
csg.max <- max(course.student.grade)
# Create csg.min with the min value of course.student.grade
csg.min <- min(course.student.grade)
# Create a vector csg.over.80, with the logical result of course.student.grade over 80
csg.over.80 <- course.student.grade >= 80
# Check csg.over.mean
csg.over.80
# Filter the course.student.grade with csg.over.mean
course.student.grade[csg.over.80]
### practice_2_answer
### course_grade
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1:30)
# Create a variable csn, with data: length of course.student.number
csn <- length(course.student.number)
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(x = c(55:100), size = csn)
course.student.grade
# Assign course.student.number as names of the course.student.grade
names(course.student.grade) <- course.student.number
# Create csg.mean, with the mean value of course.student.grade
csg.mean <- mean(course.student.grade)
# Create csg.max with the max value of course.student.grade
csg.max <- max(course.student.grade)
# Create csg.min with the min value of course.student.grade
csg.min <- min(course.student.grade)
# Create a vector csg.over.80, with the logical result of course.student.grade over 80
csg.over.80 <- course.student.grade >= 80
# Check csg.over.mean
csg.over.80
# Filter the course.student.grade with csg.over.80
course.student.grade[csg.over.80]
a<-c(course.student.grade>80)
a
course.student.grade[csg.over.80]
csg.over.80 <- course.student.grade >= 80
# Check csg.over.80
csg.over.80
# Filter the course.student.grade with csg.over.80
course.student.grade[csg.over.80]
### practice_2_answer
### course_grade
# Create a vector called course.students.number, with data: c(1, 30)
course.student.number <- c(1:30)
# Create a variable csn, with data: length of course.student.number
csn <- length(course.student.number)
# Create a vector course.student.grade, with sample() function: x = c(55:100), size = csn
course.student.grade <- sample(x = c(55:100), size = csn)
course.student.grade
# Assign course.student.number as names of the course.student.grade
names(course.student.grade) <- course.student.number
# Create csg.mean, with the mean value of course.student.grade
csg.mean <- mean(course.student.grade)
# Create csg.max with the max value of course.student.grade
csg.max <- max(course.student.grade)
# Create csg.min with the min value of course.student.grade
csg.min <- min(course.student.grade)
# Create a vector csg.over.80, with the logical result of course.student.grade over 80
csg.over.80 <- course.student.grade >= 80
# Check csg.over.80
csg.over.80
# Filter the course.student.grade with csg.over.80
course.student.grade[csg.over.80]
length(course.student.grade[csg.over.80])
# Print over 80 details
print(paste("高於80分總人數：", length(course.student.grade[csg.over.80])))
print(paste("高於80分座號：", names(course.student.grade[csg.over.80])))
