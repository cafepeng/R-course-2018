library(RColorBrewer)
library(wordcloud)
str(posts04)
class(posts04)
View(posts04)
posts05<-posts04[,1]
posts05<-data.frame(posts04[,1])
View(posts05)
source('D:/GitHub/R-course-2018/course week_4/course_4/example_2_facebookApi_myprac_2.R')
posts06 <- tm_map(posts05, removePunctuation)
#first convert dataframe into VectorSource
posts06 <- Corpus(VectorSource(posts05))
View(posts06)
#first convert dataframe into VectorSource
posts06 <- Corpus(VectorSource(posts04))
#first convert dataframe into VectorSource
posts06 <- Corpus(VectorSource(posts05))
posts06 <- tm_map(posts06, removePunctuation)
posts06 <- tm_map(posts06, removePunctuation)
posts06 <- tm_map(posts06, removeNumbers)
posts06 <- tm_map(posts06, stripWhitespace)
source('D:/GitHub/R-course-2018/course week_4/course_4/example_2_facebookApi_myprac_2.R')
library(Rfacebook)
install.packages("Rfacebook")
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
page.id<-"22092443056"
token<-"EAACEdEose0cBAJfDteCwPgpzALAfThhTGqRkA94p58WZCLtSwmth5cXGfn4OUfHa0TzHYa5Ea7sHCVtalqCfL9tpSv1btsfNe8YGpBFV8Tm5XMMqirj6hJ7aVUuQLIMowkeG6IpqINJm3n5JxWpC3JEijuqg93y1xfjye4JE6jH4v2LpHZAqYOEMOUDQnwfjPfZCIXF9wZDZD"
page<-getPage(page.id, token, n=300)
page<-getPage(page.id,token, n==2)
library(Rfacebook)
page<-getPage(page.id,token, n==2)
page<-getPage(page.id,token, n=2)
View(page)
page<-getPage(page.id,token, n=300)
View(page)
doc01<-Corpus(VectorSource(page$message))
View(doc01)
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))}
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))}
)
#remove punctuation and others
doc02<-tm_map(doc01,removePunctuation)
doc02<-tm_map(doc01,removePunctuation)
doc02<-tm_map(doc01,removeNumbers)
doc02<-tm_map(doc01,stripWhitespace)
View(doc02)
doc02<-tm_map(doc01,content_transformer(tolower))
#定義清洗：清洗就是把你找到的符號用空白取代
docs <- tm_map(docs, toSpace, "<U+00AF>")
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc02, toSpace, "<U+00AF>")
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))}
)
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc02, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) {
return (gsub(pattern, " ", x))}
)
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc02, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
#remove punctuation and others
doc02<-tm_map(doc01,removePunctuation)
doc02<-tm_map(doc01,removeNumbers)
doc02<-tm_map(doc01,stripWhitespace)
doc02<-tm_map(doc01,content_transformer(tolower))
View(doc02)
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
View(doc01)
doc02 <- gsub("[^0-9A-Za-z///' ]","'" , doc01 ,ignore.case = TRUE)
class(doc02)
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
inspect(doc01)
library(tm)
inspect(doc01)
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
rm(doc02)
View(doc01)
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
inspect(doc01)
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc01[c(1:10)])
doc02<- tm_map(doc02,toSpace,"\xed��\")
doc02<- tm_map(doc02, toSpace,"\xed")
doc02<- tm_map(doc02, toSpace,"\")
doc02<- tm_map(doc02, toSpace,"\")
doc02<- tm_map(doc02, toSpace, "\")
doc02<- tm_map(doc02, toSpace, "\ ")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
inspect(doc02[c(10:20)])
rm(doc02)
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#remove punctuation and others
doc02<-tm_map(doc01,removePunctuation)
doc02<-tm_map(doc01,removeNumbers)
doc02<-tm_map(doc01,stripWhitespace)
inspect(doc02[c(10:20)])
#remove punctuation and others
doc02<-tm_map(doc01,removePunctuation, ucp=TRUE)
inspect(doc02[c(10:20)])
doc02<-tm_map(doc01,removePunctuation, ucp=TRUE)
#ucp: a logical specifying whether to use Unicode character properties for determining punctuation characters. If FALSE (default), characters in the ASCII [:punct:] class are taken; if TRUE, the characters with Unicode general category P (Punctuation).
doc02<-tm_map(doc01,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
doc02<-tm_map(doc02,content_transformer(tolower))
inspect(doc02[c(10:20)])
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation, ucp=TRUE)
#ucp: a logical specifying whether to use Unicode character properties for determining punctuation characters. If FALSE (default), characters in the ASCII [:punct:] class are taken; if TRUE, the characters with Unicode general category P (Punctuation).
doc02<-tm_map(doc01,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
doc02<-tm_map(doc02,content_transformer(tolower))
inspect(doc02[c(10:20)])
rm(doc02)
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation, ucp=TRUE)
#ucp: a logical specifying whether to use Unicode character properties for determining punctuation characters. If FALSE (default), characters in the ASCII [:punct:] class are taken; if TRUE, the characters with Unicode general category P (Punctuation).
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
doc02<-tm_map(doc02,content_transformer(tolower))
inspect(doc02[c(10:20)])
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation)
#ucp: a logical specifying whether to use Unicode character properties for determining punctuation characters. If FALSE (default), characters in the ASCII [:punct:] class are taken; if TRUE, the characters with Unicode general category P (Punctuation).
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
doc02<-tm_map(doc02,content_transformer(tolower))
inspect(doc02[c(10:20)])
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation)
#ucp: a logical specifying whether to use Unicode character properties for determining punctuation characters. If FALSE (default), characters in the ASCII [:punct:] class are taken; if TRUE, the characters with Unicode general category P (Punctuation).
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
doc02<-tm_map(doc02,content_transformer(tolower))
inspect(doc02[c(10:20)])
rm(doc02)
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation)
#ucp: a logical specifying whether to use Unicode character properties for determining punctuation characters. If FALSE (default), characters in the ASCII [:punct:] class are taken; if TRUE, the characters with Unicode general category P (Punctuation).
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
#doc02<-tm_map(doc02,content_transformer(tolower))
inspect(doc02[c(10:20)])
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
inspect(doc02[c(1:10)])
rm(doc02)
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
#doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc01, toSpace, ">")
#doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
inspect(doc02[c(1:10)])
inspect(doc02[c(1:10)])
library(Rfacebook)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
inspect(doc02[c(1:10)])
class(doc02)
inspect(doc01[c(1:10)])
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
#remove punctuation and others
doc02<-tm_map(doc01,removePunctuation)
doc02<-tm_map(doc01,removeNumbers)
doc02<-tm_map(doc01,stripWhitespace)
inspect(doc02[c(1:10)])
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation)
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
inspect(doc02[c(1:10)])
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
inspect(doc02[c(1:10)])
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc02[c(1:10)])
library(Rfacebook)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc02[c(1:10)])
View(doc02)
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation)
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
inspect(doc02[c(1:10)])
rm(doc02)
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
#doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc02[c(1:10)])
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation)
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc01, toSpace, ">")
#doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc02[c(1:10)])
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation)
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
inspect(doc02[c(1:10)])
rm(doc02)
#要清洗掉的東西
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc01, toSpace, ">")
#doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc02[c(1:10)])
#remove punctuation and others
doc02<-tm_map(doc02,removePunctuation,ucp=TRUE)
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
inspect(doc02[c(1:10)])
rm(doc02)
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
doc02<- tm_map(doc01, toSpace, ">")
inspect(doc02[c(5:10)])
doc02<- tm_map(doc02, toSpace, "+")
inspect(doc02[c(5:10)])
inspect(doc02[c(5:10)])
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc01, toSpace, ">")
inspect(doc02[c(5:10)])
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc02[c(5:10)])
doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc01, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
inspect(doc02[c(5:10)])
doc02<-tm_map(doc02,removePunctuation,ucp=TRUE)
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
inspect(doc02[c(1:10)])
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
#定義清洗：清洗就是把你找到的符號用空白取代
#doc02<- tm_map(doc01, toSpace, "<U+00AF>")
doc02<- tm_map(doc01, toSpace, ">")
inspect(doc02[c(5:10)])
#doc02<- tm_map(doc02, toSpace, "<U+")
##problem at this command
###doc02<- tm_map(doc02, toSpace, "+")
doc02<- tm_map(doc02, toSpace, "#")
inspect(doc02[c(5:10)])
doc02<- tm_map(doc02, toSpace, "<U+00AF>")
doc02<- tm_map(doc02, toSpace, ">")
doc02<- tm_map(doc02, toSpace, "<U+")
doc02<- tm_map(doc02, toSpace, "#")
doc02<- tm_map(doc02, toSpace, "/")
doc02<- tm_map(doc02, toSpace, "@")
inspect(doc02[c(5:10)])
doc02<-tm_map(doc02,removePunctuation,ucp=TRUE)
doc02<-tm_map(doc02,removeNumbers)
doc02<-tm_map(doc02,stripWhitespace)
inspect(doc02[c(1:10)])
doc02<-tm_map(doc02,content_transformer(tolower))
inspect(doc02[c(1:10)])
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
head(doc01)
install.packages("Rfacebook")
install.packages("NLP")
install.pacakges("tm")
install.packages("tm")
install.packages("RColorBrewer")
install.packages("wordcloud")
library(Rfacebook)
library(NLP)
library(tm)
library(RColorBrewer)
library(wordcloud)
inspect(doc02[c(5:10)])
doc02<- tm_map(doc02, toSpace,"<NA>")
doc02<- tm_map(doc02, toSpace,"~")
inspect(doc02[c(5:10)])
dtm<-TermDocumentMatrix(doc02)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing=TRUE)
d<-data.frame(word=names(v),freq=v)
head(d,10)
doc02<- tm_map(doc02, toSpace, "the")
doc02<- tm_map(doc02, toSpace, "and")
doc02<- tm_map(doc02, toSpace,"for")
doc02<- tm_map(doc02, toSpace,"you")
doc02<- tm_map(doc02, toSpace,"http")
doc02<- tm_map(doc02, toSpace,"with")
doc02<- tm_map(doc02, toSpace,"sbuxco")
dtm<-TermDocumentMatrix(doc02)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing=TRUE)
d<-data.frame(word=names(v),freq=v)
head(d,10)
head(d,20)
#remove english common stopwords
doc02<- tm_map(doc02,removeWords,stopwords("english"))
inspect(doc02[c(1:10)])
dtm<-TermDocumentMatrix(doc02)
m<-as.matrix(dtm)
v<-sort(rowSums(m),decreasing=TRUE)
d<-data.frame(word=names(v),freq=v)
head(d,20)
set.seed(1234)
wordcloud(words=d$word,freq=d$freq,min.freq=1,max.words = 200,random.order = FALSE,
rot.per = 0.35,colors=brewer.pal(8,"Dark2"))
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
warnings()
wordcloud(words=d$word,freq=d$freq,min.freq=10,max.words = 200,random.order = FALSE,
rot.per = 0.35,colors=brewer.pal(8,"Dark2"))
wordcloud(words=d$word,freq=d$freq,min.freq=5,max.words = 200,random.order = FALSE,
rot.per = 0.35,colors=brewer.pal(8,"Dark2"))
wordcloud(words=d$word,freq=d$freq,min.freq=2,max.words = 200,random.order = FALSE,
rot.per = 0.35,colors=brewer.pal(8,"Dark2"))
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
library(Rfacebook)
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
library(NLP)
library(tm)
library(stats)
library(proxy)
library(dplyr)
library(readtext)
library(jiebaRD)
library(jiebaR)
library(slam)
library(Matrix)
library(tidytext)
install.packages("proxy")
install.packages("dplyr")
View(dtm)
View(dtm)
library(readtext)
install.pacakges("readtext")
install.packages("readtext")
rawData = readtext("*.txt")
library(readtext)
rawData = readtext("*.txt")
rawData = readtext(".t2012-4.txt")
rawData = readtext("2012-4.txt")
rawData = readtext("2012-4.txt")
setwd()
setwd("D:/GitHub/R-course-2018/course week_5/task_5")
rawData = readtext("2012-4.txt")
View(rawData)
View(rawData)
rawdata$text
rawData$text
rm(rawData)
source('D:/GitHub/R-course-2018/hw_4/hw_4_facebook.R', encoding = 'UTF-8')
library(Rfacebook)
View(dtm)
View(m)
View(d)
