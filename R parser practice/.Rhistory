library(RCurl)
library(XML)
library(httr)
getwd()
url_head<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/u_active_v1.asp?scholarship_skeyword=%E8%AB%8B%E8%BC%B8%E5%85%A5%E9%97%9C%E9%8D%B5%E5%AD%97&ssc_sat=&PageNo="
url_tail<-"&id={6744E5C6-790F-420F-A4B8-07F425A5C771}"
allurl<-c()
for(n in 1:2){
url<-paste0(url_head,n)
url<-paste0(url,url_tail)
allurl[n]<-url
}
class(allurl)
print(allurl)
temp<- getURL(all_url[k], .encoding = "UTF-8")
#2. 將html轉成xml
xmldoc  <- htmlParse(temp)
#爬取這些網址
#要先把html透過htmlParse轉成xml，因為xpath只能讀取xml
#1. 將各頁一覽表html原始碼，並存成temp變數
temp<- getURL(allurl[k], .encoding = "UTF-8")
#爬取這些網址
#要先把html透過htmlParse轉成xml，因為xpath只能讀取xml
#1. 將各頁一覽表html原始碼，並存成temp變數
temp<- getURL(allurl, .encoding = "UTF-8")
temp
#2. 將html轉成xml
xmldoc<- htmlParse(temp)
xmldoc
#3.選取超連結字串
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
path
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
for (k in 1:2){
temp<- getURL(allurl, .encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
path<-paste0(path,subpath)
}
for (k in 1:2){
temp<- getURL(allurl[k], .encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
path<-paste0(path,subpath)
}
path
for (k in 1:2){
temp<- getURL(allurl[k], .encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
allurl<-paste0(path,subpath)
}
for (k in 1:2){
temp<- getURL(allurl[k], .encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urllist<-paste0(path,subpath)
}
for (k in 1:2){
temp<- getURL(allurl[k], .encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
path<-paste0(path,subpath)
}
for (k in 1:2){
temp<- getURL(allurl[k], .encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
path<-paste0(path,subpath)
}
url_head<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/u_active_v1.asp?scholarship_skeyword=%E8%AB%8B%E8%BC%B8%E5%85%A5%E9%97%9C%E9%8D%B5%E5%AD%97&ssc_sat=&PageNo="
url_tail<-"&id={6744E5C6-790F-420F-A4B8-07F425A5C771}"
#確定最上層的網頁之網址
allurl<-c()
for(n in 1:2){
url<-paste0(url_head,n)
url<-paste0(url,url_tail)
allurl[n]<-url
}
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
path<-paste0(path,subpath)
}
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(path,subpath)
}
urlist
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(subpath,path)
}
urlist
urlist<-c()
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(subpath,path)
}
urlist
class(urlist)
length(urlist)
allurlist<-c()
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(subpath,path)
allurlist[n]<-urlist
}
length(allurlist)
allurlist<-c()
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(subpath,path)
allurlist[k]<-urlist
}
length(allurlist)
allurls<-c()
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(subpath,path)
allurls[k]<-urlist
}
allurls<-c()
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(subpath,path)
allurls<-urlist
}
length(allurls)
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
allurls<-c()
for (k in 1:2){
temp<- getURL(allurl[k], encoding = "UTF-8")
xmldoc<- htmlParse(temp)
path<- xpathSApply(xmldoc,"//td[@align=\"left\"]/a//@href")
subpath<-"http://love.ntu.edu.tw/CustomerSet/207_NTUactive/"
urlist<-paste0(subpath,path)
allurls<-c(urlist,allurls)
}
length(allurls)
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
temp02<-getURL(allurls[1],encoding="utf-8")
xmldoc02<-htmlParse(temp02)
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
path02
temp02<-getURL(allurls[1],encoding="UTF-8")
xmldoc02<-htmlParse(temp02)
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
head(path02)
temp02<-getURL(allurls[1])
xmldoc02<-htmlParse(temp02,encoding="UTF-8")
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
head(path02)
temp02<-getURL(allurls[1])
xmldoc02<-htmlParse(temp02,encoding="UTF-8")
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
alltext<-path02
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
temp02<-getURL(allurls[1],encoding="BIG-5")
xmldoc02<-htmlParse(temp02,encoding="UTF-8")
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
alltext<-data.frame(path02)
View(alltext)
temp02<-getURL(allurls[1],.encoding="UTF-8")
xmldoc02<-htmlParse(temp02,.encoding="UTF-8")
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
alltext<-data.frame(path02)
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
temp02<-getURL(allurls[1], .encoding="UTF-8")
xmldoc02<-htmlParse(temp02)
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
alltext<-data.frame(path02)
View(alltext)
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
View(alltext)
alltext<-data.frame()
for (k in length(allurls)){
temp02<-getURL(allurls[k], .encoding="UTF-8") #註:encoding前面一定要加.不然是顯示亂碼
xmldoc02<-htmlParse(temp02)
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
alltext<-data.frame(path02,alltext)
}
alltext<-c()
for (k in length(allurls)){
temp02<-getURL(allurls[k], .encoding="UTF-8") #註:encoding前面一定要加.不然是顯示亂碼
xmldoc02<-htmlParse(temp02)
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
alltext<-c(path02,alltext)
}
alltext
allurls
alltext<-c()
for (k in 1:length(allurls)){
temp02<-getURL(allurls[k], .encoding="UTF-8") #註:encoding前面一定要加.不然是顯示亂碼
xmldoc02<-htmlParse(temp02)
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
alltext<-c(path02,alltext)
}
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
##-------清理其中的雜質------##
head(alltext)
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8', echo=TRUE)
##-------清理其中的雜質------##
head(alltext,11)
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
source('D:/R parser practice/R parser practice code.R', encoding = 'UTF-8')
source('D:/GitHub/R parser practice/R parser practice code.R', encoding = 'UTF-8')
library(RCurl)
library(XML)
library(httr)
alltext_try<-capture.output(
for (k in 1:length(allurls)){
temp02<-getURL(allurls[k], .encoding="UTF-8") #註:encoding前面一定要加.不然是顯示亂碼
xmldoc02<-htmlParse(temp02)
#原始:path02<-xpathSApply(xmldoc02,"//td[@align="left"]",xmlValue)#
path02<-xpathSApply(xmldoc02,"//td[@align=\"left\"]",xmlValue)
print(path02)
}
)
head(alltext_try)
head(alltext)
source('D:/GitHub/R parser practice/R parser practice code.R', encoding = 'UTF-8')
rm(alltext_try)
##-------清理其中的雜質------##
head(alltext,11)
alltext01<-gsub("\r","",alltext)
alltext02<-gsub("\n","",alltext01)
rm(alltext02)
alltext01<-gsub("\r","",alltext)
alltext01<-gsub("\n","",alltext01)
alltext01<-gsub("\n3","",alltext01)
alltext01<-gsub("\r","",alltext)
alltext01<-gsub("\n","",alltext01)
alltext01<-gsub(" ","",alltext01)
head(alltext01,7)
head(alltext01,11)
head(alltext01,12)
head(alltext01,22)
#由於每個頁面有11筆資料，所以每11筆循環一次#
#check the length of alltext01
length(alltext01)
source('D:/GitHub/R parser practice/R parser practice code.R', encoding = 'UTF-8')
##--------------- 5.獎學金整理表-------------------##
#將資料存成20行、11欄的矩陣
alltable <- matrix(alltext01,20,11,byrow=TRUE)
View(alltable)
#去除第一欄無用文字
#alltable <- alltable[,-1]
alltable <- alltable[,2:11]
View(alltable)
getwd()
alltable <- matrix(alltext01,20,11,byrow=TRUE)
#去除第一欄無用文字
#alltable <- alltable[,-1]
#下列這個指令得到一樣結果
alltable01 <- alltable[,2:11]
#設定欄位名稱
colnames(alltable01) <- c("類別名稱","申請日期","獎學金名稱","申請地點","附加檔案","獎學金金額","獎學金名額","申請對象","申請資格","繳交文件")
View(alltable01)
#匯成csv 檔
write.csv(alltable01,"ntu_table.csv")
source('D:/GitHub/R parser practice/R parser practice code.R', encoding = 'UTF-8')
